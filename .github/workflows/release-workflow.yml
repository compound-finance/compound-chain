name: Build
on:
  push:
    tags:
      - 'm*'

jobs:
  create_release:
    name: Create Empty Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          draft: true
          prerelease: true


  linux-build:
    name: Linux Build
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          set -eo pipefail
          ./scripts/get_substrate.sh --fast
          cargo build --release

      - name: Upload Release Asset
        id: upload-gateway
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: target/release/gateway
          asset_name: gateway-x86_64-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        id: upload-types
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: types.json
          asset_name: types.json
          asset_content_type: application/json

      - name: Upload Release Asset
        id: upload-rpc
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: rpc.json
          asset_name: rpc.json
          asset_content_type: application/json

  macos-build:
    name: MacOS Build
    runs-on: macos-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          set -eo pipefail
          ./scripts/get_substrate.sh --fast
          cargo build --release

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: target/release/gateway
          asset_name: gateway-x86_64-macos
          asset_content_type: application/octet-stream