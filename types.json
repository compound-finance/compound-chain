{
  "Source0": "TypesRS",
  "Decimals": "u8",
  "Bips": "u128",
  "Nonce": "u32",
  "Timestamp": "u128",
  "Int": "i128",
  "Uint": "u128",
  "AssetAmount": "Uint",
  "AssetBalance": "Int",
  "AssetPrice": "Uint",
  "AssetQuantity": "Quantity",
  "CashQuantity": "Quantity",
  "USDQuantity": "Quantity",
  "LiquidityFactor": "Factor",
  "ReporterSet": "Vec<[u8; 20]>",
  "SignedPayload": "Vec<u8>",
  "ValidatorSig": "[u8; 65]",
  "ValidatorIdentity": "[u8; 20]",
  "ValidatorKeys": {
    "substrate_id": "SubstrateId",
    "eth_address": "[u8; 20]"
  },
  "AssetInfo": {
    "asset": "ChainAsset",
    "decimals": "Decimals",
    "liquidity_factor": "LiquidityFactor",
    "rate_model": "InterestRateModel",
    "miner_shares": "MinerShares",
    "supply_cap": "AssetAmount",
    "symbol": "Symbol",
    "ticker": "Ticker"
  },
  "ConfigSetString": "Vec<String>",
  "Price": ["Symbol", "AssetPrice"],
  "Quantity": ["Symbol", "AssetAmount"],
  "CashPrincipal": "(Int)",
  "CashPrincipalAmount": "(Uint)",
  "CashIndex": "(Uint)",
  "AssetIndex": "(Uint)",
  "SessionIndex": "u32",
  "AccountId32": "[u8;32]",
  "SubstrateId": "AccountId32",
  "GovernanceResult": {
    "_enum": {
      "FailedToDecodeCall": "",
      "DispatchSuccess": "",
      "DispatchFailure": "(DispatchError)"
    }
  },

  "Source1": "SymbolRS",
  "Symbol": "[u8; 12]",
  "Ticker": "[u8; 12]",
  "Units": "(Ticker, u8)",

  "Source2": "ChainsRS",
  "ChainId": {
    "_enum": ["Comp", "Eth", "Dot", "Sol", "Tez"]
  },
  "ChainAccount": {
    "_enum": {
      "Comp": ["[u8; 20]"],
      "Eth": ["[u8; 20]"],
      "Dot": ["[u8; 20]"],
      "Sol": ["[u8; 20]"],
      "Tez": ["[u8; 20]"]
    }
  },
  "ChainHash": {
    "_enum": {
      "Comp": ["[u8; 32]"],
      "Eth": ["[u8; 32]"],
      "Dot": ["[u8; 32]"],
      "Sol": ["[u8; 32]"],
      "Tez": ["[u8; 32]"]
    }
  },
  "CashAsset": {
    "_enum": {
      "Cash": "",
      "Asset": "ChainAsset"
    }
  },
  "ChainAsset": {
    "_enum": {
      "Comp": ["[u8; 20]"],
      "Eth": ["[u8; 20]"],
      "Dot": ["[u8; 20]"],
      "Sol": ["[u8; 20]"],
      "Tez": ["[u8; 20]"]
    }
  },
  "ChainAssetAccount": {
    "_enum": {
      "Comp": "([u8; 20], [u8; 20])",
      "Eth": "([u8; 20], [u8; 20])",
      "Dot": "([u8; 20], [u8; 20])",
      "Sol": "([u8; 20], [u8; 20])",
      "Tez": "([u8; 20], [u8; 20])"
    }
  },
  "ChainAccountSignature": {
    "_enum": {
      "Comp": "([u8; 20], [u8; 65])",
      "Eth": "([u8; 20], [u8; 65])",
      "Dot": "([u8; 20], [u8; 65])",
      "Sol": "([u8; 20], [u8; 65])",
      "Tez": "([u8; 20], [u8; 65])"
    }
  },
  "ChainSignature": {
    "_enum": {
      "Comp": ["[u8; 65]"],
      "Eth": ["[u8; 65]"],
      "Dot": ["[u8; 65]"],
      "Sol": ["[u8; 65]"],
      "Tez": ["[u8; 65]"]
    }
  },
  "ChainSignatureList": {
    "_enum": {
      "Comp": ["Vec<([u8; 20], [u8; 65])>"],
      "Eth": ["Vec<([u8; 20], [u8; 65])>"],
      "Dot": ["Vec<([u8; 20], [u8; 65])>"],
      "Sol": ["Vec<([u8; 20], [u8; 65])>"],
      "Tez": ["Vec<([u8; 20], [u8; 65])>"]
    }
  },
  "Compound": {},
  "Ethereum": {},
  "Polkadot": {},
  "Solana": {},
  "Tezos": {},

  "Source3": "NoticesRS",
  "EncodedNotice": "Vec<u8>",
  "EraId": "u32",
  "EraIndex": "u32",
  "NoticeId": "(EraId, EraIndex)",
  "ExtractionNoticeEth": {
    "id": "NoticeId",
    "parent": "[u8; 32]",
    "asset": "[u8; 20]",
    "account": "[u8; 20]",
    "amount": "u128"
  },
  "ExtractionNotice": {
    "_enum": {
      "Eth": "ExtractionNoticeEth"
    }
  },
  "CashExtractionNoticeEth": {
    "id": "NoticeId",
    "parent": "[u8; 32]",
    "account": "[u8; 20]",
    "principal": "u128"
  },
  "CashExtractionNotice": {
    "_enum": {
      "Eth": "CashExtractionNoticeEth"
    }
  },
  "FutureYieldNoticeEth": {
    "id": "NoticeId",
    "parent": "[u8; 32]",
    "next_cash_yield": "u128",
    "next_cash_yield_start_at": "u128",
    "next_cash_index": "u128"
  },
  "FutureYieldNotice": {
    "_enum": {
      "Eth": "FutureYieldNoticeEth"
    }
  },
  "SetSupplyCapNoticeEth": {
    "id": "NoticeId",
    "parent": "[u8; 32]",
    "asset": "[u8; 20]",
    "amount": "u128"
  },
  "SetSupplyCapNotice": {
    "_enum": {
      "Eth": "SetSupplyCapNoticeEth"
    }
  },
  "ChangeAuthorityNoticeEth": {
    "id": "NoticeId",
    "parent": "[u8; 32]",
    "new_authorities": "Vec<[u8; 20]>"
  },
  "ChangeAuthorityNotice": {
    "_enum": {
      "Eth": "ChangeAuthorityNoticeEth"
    }
  },
  "Notice": {
    "_enum": {
      "ExtractionNotice": "ExtractionNotice",
      "CashExtractionNotice": "CashExtractionNotice",
      "FutureYieldNotice": "FutureYieldNotice",
      "SetSupplyCapNotice": "SetSupplyCapNotice",
      "ChangeAuthorityNotice": "ChangeAuthorityNotice"
    }
  },
  "NoticeState": {
    "_enum": {
      "Missing": "",
      "Pending": "NoticeStatePending",
      "Executed": ""
    }
  },
  "NoticeStatePending": {
    "signature_pairs": "ChainSignatureList"
  },

  "Source4": "CompoundCrypto",
  "CryptoError": {
    "_enum": [
      "Unknown",
      "KeyNotFound",
      "KeyringLock",
      "InvalidKeyId",
      "ParseError",
      "RecoverError",
      "HSMError",
      "EnvironmentVariablePrivateKeyNotSet",
      "HexDecodeFailed",
      "EnvironmentVariableHexDecodeFailed",
      "EnvironmentVariableInvalidSeed"
    ]
  },

  "Source5": "RatesRS",
  "RatesError": {
    "_enum": ["ModelRateOutOfBounds", "ZeroAboveKink", "KinkAboveFull", "KinkUtilizationTooHigh", "Overflowed"]
  },
  "Factor": "(Uint)",
  "MinerShares": "Factor",
  "APR": "(Uint)",
  "Utilization": "(Uint)",
  "KinkModel": {
    "zero_rate": "APR",
    "kink_rate": "APR",
    "kink_utilization": "Utilization",
    "full_rate": "APR"
  },
  "InterestRateModel": {
    "_enum": {
      "Kink": "KinkModel"
    }
  },

  "Source6": "ReasonRS",
  "Reason": {
    "_enum": {
      "AssetExtractionNotSupported": "",
      "AssetNotSupported": "",
      "BadAccount": "",
      "BadAddress": "",
      "BadAsset": "",
      "BadChainId": "",
      "BadFactor": "",
      "BadSymbol": "",
      "BadTicker": "",
      "BadUnits": "",
      "ChainMismatch": "",
      "CryptoError": "(CryptoError)",
      "EventAlreadySigned": "",
      "FailedToSubmitExtrinsic": "",
      "FetchError": "",
      "IncorrectNonce": "(Nonce, Nonce)",
      "InKindLiquidation": "",
      "InsufficientChainCash": "",
      "InsufficientLiquidity": "",
      "InsufficientTotalFunds": "",
      "InvalidAPR": "",
      "InvalidCodeHash": "",
      "InvalidLiquidation": "",
      "InvalidUTF8": "",
      "KeyNotFound": "",
      "MathError": "(MathError)",
      "MaxForNonCashAsset": "",
      "MinTxValueNotMet": "",
      "None": "",
      "NoPrice": "",
      "NoSuchAsset": "",
      "NoticeAlreadySigned": "",
      "NoticeHashMismatch": "",
      "NoticeMissing": "(ChainId, NoticeId)",
      "NotImplemented": "",
      "OracleError": "(OracleError)",
      "RatesError": "(RatesError)",
      "RepayTooMuch": "",
      "SelfTransfer": "",
      "SetYieldNextError": "(SetYieldNextError)",
      "SerdeError": "",
      "SignatureAccountMismatch": "",
      "SignatureMismatch": "",
      "TimeTravelNotAllowed": "",
      "TrxRequestParseError": "(TrxReqParseError)",
      "UnknownValidator": ""
    }
  },
  "MathError": {
    "_enum": ["Overflow", "Underflow", "SignMismatch", "SymbolMismatch", "PriceNotUSD", "DivisionByZero"]
  },
  "OracleError": {
    "_enum": [
      "EthAbiParseError",
      "InvalidApiEndpoint",
      "InvalidApiResponse",
      "InvalidKind",
      "InvalidSymbol",
      "InvalidTicker",
      "JsonParseError",
      "HexParseError",
      "HttpError",
      "NotAReporter",
      "StalePrice",
      "SubmitError"
    ]
  },
  "TrxReqParseError": {
    "_enum": [
      "NotImplemented",
      "LexError",
      "InvalidAmount",
      "InvalidAddress",
      "InvalidArgs",
      "UnknownFunction",
      "InvalidExpression",
      "InvalidChain",
      "InvalidChainAccount"
    ]
  },

  "Source7": "EventsRS",
  "EventInfo": {
    "latest_eth_block": "u64",
    "events": "Vec<(ChainLogId, ChainLogEvent)>"
  },
  "ChainLogId": {
    "_enum": {
      "Eth": "(u64, u64)"
    }
  },
  "ChainLogEvent": {
    "_enum": {
      "Eth": "EthereumLogEvent"
    }
  },
  "EventState": {
    "_enum": {
      "Pending": {
        "signers": "Vec<ValidatorKey>"
      },
      "Failed": {
        "reason": "Reason"
      },
      "Done": {}
    }
  },

  "Source8": "EthereumClientRS",
  "EthereumLogEvent": {
    "block_hash": "[u8; 32]",
    "block_number": "u64",
    "transaction_index": "u64",
    "log_index": "u64",
    "event": "EthereumEvent"
  },
  "LockEvent": {
    "asset": "[u8; 20]",
    "sender": "[u8; 20]",
    "recipient": "[u8; 20]",
    "amount": "u128"
  },
  "LockCashEvent": {
    "sender": "[u8; 20]",
    "recipient": "[u8; 20]",
    "amount": "u128",
    "principal": "u128"
  },
  "ExecTrxRequest": {
    "account": "[u8; 20]",
    "trx_request": "String"
  },
  "ExecuteProposalEvent": {
    "title": "String",
    "extrinsics": "Vec<Vec<u8>>"
  },
  "NoticeInvokedEvent": {
    "era_id": "u32",
    "era_index": "u32",
    "notice_hash": "[u8; 32]",
    "result": "Vec<u8>"
  },
  "EthereumEvent": {
    "_enum": {
      "Lock": "LockEvent",
      "LockCash": "LockCashEvent",
      "ExecTrxRequest": "ExecTrxRequestEvent",
      "ExecuteProposal": "ExecuteProposalEvent",
      "NoticeInvoked": "NoticeInvokedEvent"
    }
  },

  "Source9": "SetYieldNextRS",
  "SetYieldNextError": {
    "_enum": {
      "TimestampTooSoonToNow": "",
      "TimestampTooSoonToNext": ""
    }
  },
  "Source10": "AccountRS",
  "Address": "MultiAddress",
  "LookupSource": "MultiAddress",
  "VersionedAuthorityList": {
    "version": "u8",
    "authorityList": "AuthorityList"
  },
  "Authorities": "Vec<AccountId32>",
  "SessionKeys": {
    "aura": "[u8;32]",
    "grandpa": "[u8;32]"
  },
  "Keys": "SessionKeys"
}
