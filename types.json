{
  "Source0": "TypesRS",
  "Fraction": "u128",
  "Nonce": "u32",
  "Timestamp": "u128",
  "Int": "i128",
  "Uint": "u128",
  "EncodedNotice": "Vec<u8>",
  "AssetAmount": "Uint",
  "AssetBalance": "Int",
  "AssetPrice": "Uint",
  "AssetQuantity": "Quantity",
  "CashQuantity": "Quantity",
  "USDQuantity": "Quantity",
  "MaxableAssetAmount": {
    "_enum": {
      "Max": [],
      "Value": ["AssetAmount"]
    }
  },
  "ChainAccount": {
    "_enum": {
      "Eth": ["[u8; 20]"]
    }
  },
  "ChainAsset": {
    "_enum": {
      "Eth": ["[u8; 20]"]
    }
  },
  "ChainSignature": {
    "_enum": {
      "Eth": ["[u8; 65]"]
    }
  },
  "ChainSignatureList": {
    "_enum": {
      "Eth": ["Vec<[u8; 65]>"]
    }
  },
  "ReporterSet": "Vec<[u8; 20]>",
  "SignedPayload": "Vec<u8>",
  "ValidatorSig": "[u8; 65]",
  "ValidatorKey": "[u8; 20]",
  "ValidatorSet": "Vec<ValidatorKey>",
  "ConfigSetString": "Vec<String>",
  "EventStatus": {
    "_enum": {
      "Pending": {
        "signers": "ValidatorSet"
      },
      "Failed": {
        "hash": "[u8; 32]",
        "reason": "Reason"
      },
      "Done": {}
    }
  },
  "NoticeStatusPending": {
    "_enum": {
      "signers": "ValidatorSet",
      "signatures": "ChainSignatureList",
      "notice": "Notice"
    }
  },
  "NoticeStatus": {
    "_enum": {
      "Missing": [],
      "Pending": "NoticeStatusPending",
      "Notice": "Notice",
      "Done": []
    }
  },
  "Price": ["Symbol", "AssetPrice"],
  "Quantity": ["Symbol", "AssetAmount"],
  "CashPrincipal": ["Int"],
  "CashIndex": ["Uint"],
  "AssetIndex": ["Uint"],

  "Source1": "SymbolRS",
  "Symbol": "([u8; 12], u8)",

  "Source2": "ChainsRS",
  "ChainId": {
    "_enum": ["Comp", "Eth", "Dot", "Sol", "Tez"]
  },
  "Compound": {},
  "Ethereum": {},
  "Polkadot": {},
  "Solana": {},
  "Tezos": {},

  "Source3": "NoticesRS",
  "EraId": "u32",
  "EraIndex": "u32",
  "NoticeId": "(EraId, EraIndex)",
  "ExtractionNoticeEth": {
    "id": "NoticeId",
    "parent": "[u8; 32]",
    "asset": "[u8; 20]",
    "account": "[u8; 20]",
    "amount": "u128"
  },
  "ExtractionNotice": {
    "_enum": {
      "Eth": "ExtractionNoticeEth"
    }
  },
  "CashExtractionNoticeEth": {
    "id": "NoticeId",
    "parent": "[u8; 32]",
    "account": "[u8; 20]",
    "amount": "u128",
    "cash_index": "u128"
  },
  "CashExtractionNotice": {
    "_enum": {
      "Eth": "CashExtractionNoticeEth"
    }
  },
  "FutureYieldNoticeEth": {
    "id": "NoticeId",
    "parent": "[u8; 32]",
    "next_cash_yield": "u128",
    "next_cash_yield_start_at": "u128",
    "next_cash_index": "u128"
  },
  "FutureYieldNotice": {
    "_enum": {
      "Eth": "FutureYieldNoticeEth"
    }
  },
  "SetSupplyCapNoticeEth": {
    "id": "NoticeId",
    "parent": "[u8; 32]",
    "asset": "[u8; 20]",
    "amount": "u128"
  },
  "SetSupplyCapNotice": {
    "_enum": {
      "Eth": "SetSupplyCapNoticeEth"
    }
  },
  "ChangeAuthorityNoticeEth": {
    "id": "NoticeId",
    "parent": "[u8; 32]",
    "new_authorities": "Vec<[u8; 20]>"
  },
  "ChangeAuthorityNotice": {
    "_enum": {
      "Eth": "ChangeAuthorityNoticeEth"
    }
  },
  "Notice": {
    "_enum": {
      "ExtractionNotice": "ExtractionNotice",
      "CashExtractionNotice": "CashExtractionNotice",
      "FutureYieldNotice": "FutureYieldNotice",
      "SetSupplyCapNotice": "SetSupplyCapNotice",
      "ChangeAuthorityNotice": "ChangeAuthorityNotice"
    }
  },

  "Source4": "CoreRS",
  "CryptoError": {
    "_enum": [
      "Unknown",
      "KeyNotFound",
      "KeyringLock",
      "InvalidKeyId",
      "ParseError",
      "RecoverError",
      "HSMError",
      "EnvironmentVariablePrivateKeyNotSet",
      "HexDecodeFailed",
      "EnvironmentVariableHexDecodeFailed",
      "EnvironmentVariableInvalidSeed"
    ]
  },
  "Reason": {
    "_enum": {
      "None": "",
      "NotImplemented": "",
      "ChainMismatch": "",
      "CryptoError": "CryptoError",
      "InsufficientChainCash": "",
      "InsufficientLiquidity": "",
      "InsufficientTotalFunds": "",
      "InvalidSignature": "",
      "InvalidSymbol": "",
      "KeyNotFound": "",
      "MathError": "MathError",
      "MinTxValueNotMet": "",
      "RepayTooMuch": ""
    }
  },
  "MathError": {
    "_enum": ["Overflow", "Underflow", "SignMismatch", "SymbolMismatch", "PriceNotUSD", "DivisionByZero"]
  },

  "Source5": "RatesRS",
  "APR": ["Uint"],
  "Utilization": ["Uint"],
  "InterestRateModel": {
    "_enum": {
      "Kink": {
        "zero_rate": "APR",
        "kink_rate": "APR",
        "kink_utilization": "Utilization",
        "full_rate": "APR"
      }
    }
  }
}
